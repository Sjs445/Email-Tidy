"""initial_revision

Revision ID: 21627028bc87
Revises: 
Create Date: 2023-02-11 20:36:40.294490

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "21627028bc87"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column(
            "insert_ts",
            sa.DateTime(timezone=True),
            nullable=True,
            server_default=sa.sql.func.now(),
        ),
        sa.PrimaryKeyConstraint("id", "email"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=True)
    op.create_table(
        "linked_emails",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("imap_server", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column(
            "insert_ts",
            sa.DateTime(timezone=True),
            nullable=True,
            server_default=sa.sql.func.now(),
        ),
        sa.Column(
            "scan_task_id",
            sa.String(), nullable=True,
        ),
        sa.Column(
            "unsubscribe_task_id", sa.String(), nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_linked_emails_email"), "linked_emails", ["email"], unique=True
    )
    op.create_index(op.f("ix_linked_emails_id"), "linked_emails", ["id"], unique=False)
    op.create_table(
        "scanned_emails",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email_from", sa.String(), nullable=False),
        sa.Column("subject", sa.String(), nullable=True),
        sa.Column("linked_email_address", sa.String(), nullable=True),
        sa.Column(
            "insert_ts",
            sa.DateTime(timezone=True),
            nullable=True,
            server_default=sa.sql.func.now(),
        ),
        sa.Column(
            "inbox_date",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["linked_email_address"],
            ["linked_emails.email"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_scanned_emails_id"), "scanned_emails", ["id"], unique=False
    )
    op.create_table(
        "unsubscribe_links",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("link", sa.String(), nullable=False),
        sa.Column(
            "unsubscribe_status",
            sa.Enum(
                "success", "pending", "failure", "unsure", name="unsubscribestatus"
            ),
            nullable=False,
        ),
        sa.Column("scanned_email_id", sa.Integer(), nullable=True),
        sa.Column("linked_email_address", sa.String(), nullable=True),
        sa.Column(
            "insert_ts",
            sa.DateTime(timezone=True),
            nullable=True,
            server_default=sa.sql.func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["linked_email_address"],
            ["linked_emails.email"],
        ),
        sa.ForeignKeyConstraint(
            ["scanned_email_id"],
            ["scanned_emails.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_unsubscribe_links_id"), "unsubscribe_links", ["id"], unique=False
    )
    op.create_table('invite_codes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('expire_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('insert_ts', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invite_codes_code'), 'invite_codes', ['code'], unique=True)
    op.create_index(op.f('ix_invite_codes_id'), 'invite_codes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_unsubscribe_links_id"), table_name="unsubscribe_links")
    op.drop_table("unsubscribe_links")
    op.drop_index(op.f("ix_scanned_emails_id"), table_name="scanned_emails")
    op.drop_table("scanned_emails")
    op.drop_index(op.f("ix_linked_emails_id"), table_name="linked_emails")
    op.drop_index(op.f("ix_linked_emails_email"), table_name="linked_emails")
    op.drop_table("linked_emails")
    op.drop_index(op.f('ix_invite_codes_id'), table_name='invite_codes')
    op.drop_index(op.f('ix_invite_codes_code'), table_name='invite_codes')
    op.drop_table('invite_codes')
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###

    # Manually Added - Alembic doesn't support dropping ENUM types.
    op.execute("DROP TYPE unsubscribestatus")
